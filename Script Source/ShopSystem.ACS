#DEFINE SCREEN_WIDTH    		800
#DEFINE SCREEN_HEIGHT   		600

#DEFINE SENSITIVITY_X 			20
#DEFINE SENSITIVITY_Y 			20

#DEFINE SHOPBACKGROUNDID 		9000000
#DEFINE SHOPCURSORID 			8000000
#DEFINE SHOPTEXTID 				8000001

int mouseX = SCREEN_WIDTH / 2;
int mouseY = SCREEN_HEIGHT / 2;
int ShopGUIOpen[MAXPLAYERS];

function int BasicButton (str image, str image2, str image3, int bx, int by, int bwidth, int bheight, int bid) {
	// BasicButton (Normal image, Hovered image, Clicked image, Button X, Button Y, Button width, Button height, Button ID)
	SetHudSize (SCREEN_WIDTH, SCREEN_HEIGHT, 0);

	SetFont (image);
	if (mouseX > bx - bwidth && mouseX < bx + bwidth && mouseY > by - bheight && mouseY < by + bheight) SetFont (image2);
	HudMessage (s:"A";
		HUDMSG_FADEOUT, bid, 0, bx*1.0, by*1.0, 0.1, 0.3);

	if (mouseX > bx - bwidth && mouseX < bx + bwidth && mouseY > by - bheight && mouseY < by + bheight) {
		if (keyPressed (BT_ATTACK) == 1) {
			SetFont (image3);
			HudMessage (s:"A";
				HUDMSG_FADEOUT, bid, 0, bx*1.0, by*1.0, 0.1, 0.3);
			return 1;
		}
		else if (keyPressed (BT_ALTATTACK) == 1) {
			SetFont (image3);
			HudMessage (s:"A";
				HUDMSG_FADEOUT, bid, 0, bx*1.0, by*1.0, 0.1, 0.3);
			return 2;
		}
	}

	return false;
}

function int BasicTextButton (str text, int bx, int by, int bwidth, int bheight, int bid) {
	// BasicButton (Text, Button X, Button Y, Button width, Button height, Button ID)
	SetHudSize (SCREEN_WIDTH, SCREEN_HEIGHT, 0);

	SetFont ("SMALLFONT");
	if (mouseX > bx - bwidth && mouseX < bx + bwidth && mouseY > by - bheight && mouseY < by + bheight) HudMessage (s:text; HUDMSG_FADEOUT, bid, CR_RED, bx*1.0, by*1.0, 0.1, 0.3);
	else HudMessage (s:text; HUDMSG_FADEOUT, bid, CR_WHITE, bx*1.0, by*1.0, 0.1, 0.3);

	if (mouseX > bx - bwidth && mouseX < bx + bwidth && mouseY > by - bheight && mouseY < by + bheight) {
		if (keyPressed (BT_ATTACK) == 1)
			return 1;
		else if (keyPressed (BT_ALTATTACK) == 1)
			return 2;
	}

	return false;
}

function void ToggleShopSystem (void) {
	if (ShopGUIOpen[PlayerNumber ()] == 0) {
		SetPlayerProperty (0, 1, PROP_TOTALLYFROZEN);
		ACS_NamedExecute ("ShopSystemz", 0);
		ShopGUIOpen[PlayerNumber ()] = 1;
		mouseX = SCREEN_WIDTH/2;
		mouseY = SCREEN_HEIGHT/2;
		return;
	}
	else if (ShopGUIOpen[PlayerNumber ()] == 1) {
		SetPlayerProperty (0, 0, PROP_TOTALLYFROZEN);
		ACS_NamedTerminate ("ShopSystemz", 0);
		ShopGUIOpen[PlayerNumber ()] = 0;
		mouseX = SCREEN_WIDTH/2;
		mouseY = SCREEN_HEIGHT/2;
		return;
	}
}

script "ToggleShopSystem" (void) {
	ToggleShopSystem ();
}

script "ShopSystemz" (void) {
	int mouseXadd = GetPlayerInput (-1, INPUT_YAW);
	int mouseYadd = GetPlayerInput (-1, INPUT_PITCH);
	
	while (TRUE) {
		// move the cursor
		mouseXadd = GetPlayerInput (-1, INPUT_YAW);
		mouseYadd = GetPlayerInput (-1, INPUT_PITCH);

		mouseX -= mouseXadd / SENSITIVITY_X;
		mouseY -= mouseYadd / SENSITIVITY_Y;
		// prevent the cursor from going offscreen
		if (mouseX < 0)
			mouseX = 0;
        if (mouseX > SCREEN_WIDTH)
			mouseX = SCREEN_WIDTH;
        if (mouseY < 0)
			mouseY = 0;
        if (mouseY > SCREEN_HEIGHT)
			mouseY = SCREEN_HEIGHT;
		
        SetFont ("CURSOR");
        HudMessage (s:"A"; HUDMSG_PLAIN, SHOPCURSORID, CR_UNTRANSLATED, mouseX*1.0+0.1, mouseY*1.0+0.1, 0.04);
		//if (BasicButton ("Graphics/ShopSystem/Runes.png", "Graphics/ShopSystem/RunesHover.png", "Graphics/ShopSystem/RunesClick.png", ) == 1)
		Delay (1);
	}
}