// Credits to TheMisterCat for the code

// Default button width and height = 50;
// Default button positions {
// 1/Top = X 401, Y 60
// 2/Top-Right = X 567, Y 120
// 3/Right = X 661, Y 232
// 4/Bottom-Right = X 567, Y 361
// 5/Bottom = X 401, Y 427
// 6/Bottom-Left = X 233, Y 361
// 6/Left = X 139, Y 232
// 6/Top-Left = X 233, Y 120

#DEFINE SCREEN_WIDTH    		800
#DEFINE SCREEN_HEIGHT   		600

#DEFINE SENSITIVITY_X 			20
#DEFINE SENSITIVITY_Y 			20

#DEFINE SHOPBACKGROUNDID 		9000000
#DEFINE SHOPCURSORID 			8000000
#DEFINE SHOPTEXTID 				8000001
#DEFINE SHOPCOSTID 				8000002
#DEFINE BACKBUTTON				8000003
#DEFINE SHOPBUTTONS				8000004

int mouseX = SCREEN_WIDTH / 2;
int mouseY = SCREEN_HEIGHT / 2;
int ShopGUIOpen[MAXPLAYERS];

function void ShopSystem_PrintText (str text, str font) {
	// ShopSystem_PrintText (Text, Font);
	ShopSystem_PrintTextTimed (text, font, 0.1);
}

function void ShopSystem_PrintTextTimed (str text, str font, int time) {
	// ShopSystem_PrintText (Text, Font, Time);
	SetHudSize (SCREEN_WIDTH, SCREEN_HEIGHT, 0);
	
	if (font == 0) 
		SetFont ("SmallFont");
	else
		SetFont (font);
	HudMessage (s:text;
		HUDMSG_FADEOUT, SHOPTEXTID, 0, 11*1.0+0.1, 492*1.0, time, 0.3);
}

function void ShopSystem_PrintCost (int cost) {
	// ShopSystem_PrintCost (cost);
	SetHudSize (SCREEN_WIDTH, SCREEN_HEIGHT, 0);

	SetFont ("SmallFont");
	HudMessage (s:"$", d:cost;
		HUDMSG_PLAIN, SHOPCOSTID, 0, 780*1.0, 492*1.0, 0.1);
}

function int ShopSystem_BuyStuff (str inventory, int price, int amount) {
	// ShopSystem_BuyStuff (str inventory, int amount, int price);
	// Returns 1 if successful, -1 if inventory is full and -2 if not enough cash
	int Cash = CheckInventory ("Energy");
	
	if (CheckInventory(inventory) >= CheckInventoryMax(inventory)) {
		ACS_NamedExecute ("ShopSystem_NoSpace", 0);
		return -1;
	}
	else {
		if (Cash < price) {
			ACS_NamedExecute ("ShopSystem_NoCash", 0);
			return -2;
		}
		else {
			GiveInventory (inventory, amount);
			TakeInventory ("Energy", price);
			return 1;
		}
	}
	return 0;
}

script "ShopSystem_NoCash" (void) {
	for (int i = 0; i < 35; i++) {
		ShopSystem_PrintText ("You don't have enough money for that.", "SMALLFONT");
		Delay (1);
	}
}

script "ShopSystem_NoSpace" (void) {
	for (int i = 0; i < 35; i++) {
		ShopSystem_PrintText ("Your inventory is full.", "SMALLFONT");
		Delay (1);
	}
}

function int ShopSystem_BasicButton (str image, str image2, int bx, int by, int bwidth, int bheight, int bid) {
	// ShopSystem_BasicButton (Normal image, Clicked image, Button X, Button Y, Button width, Button height, Button ID);
	// Returns 1 when clicked with left button, 2 when clicked with right button and 3 when hovered.
	SetHudSize (SCREEN_WIDTH, SCREEN_HEIGHT, 0);

	SetFont (image);
	HudMessage (s:"A";
		HUDMSG_PLAIN, bid, 0, bx*1.0, by*1.0, 0.1);

	if (mouseX > bx - bwidth && mouseX < bx + bwidth && mouseY > by - bheight && mouseY < by + bheight) {
		if (keyPressed (BT_ATTACK) == 1) {
			SetFont (image2);
			HudMessage (s:"A";
				HUDMSG_PLAIN, bid, 0, bx*1.0, by*1.0, 0.1);
			return 1;
		}
		else if (keyPressed (BT_ALTATTACK) == 1) {
			SetFont (image2);
			HudMessage (s:"A";
				HUDMSG_PLAIN, bid, 0, bx*1.0, by*1.0, 0.1);
			return 2;
		}
		return 3;
	}

	return false;
}

function int ShopSystem_BasicTextButton (str text, int bx, int by, int bwidth, int bheight, int bid) {
	// ShopSystem_BasicTextButton (Text, Button X, Button Y, Button width, Button height, Button ID);
	// Returns 1 when clicked with left button, 2 when clicked with right button and 3 when hovered.
	SetHudSize (SCREEN_WIDTH, SCREEN_HEIGHT, 0);

	SetFont ("SMALLFONT");
	if (mouseX > bx - bwidth && mouseX < bx + bwidth && mouseY > by - bheight && mouseY < by + bheight) HudMessage (s:text; HUDMSG_PLAIN, bid, CR_RED, bx*1.0, by*1.0, 0.1);
	else HudMessage (s:text; HUDMSG_PLAIN, bid, CR_WHITE, bx*1.0, by*1.0, 0.1);

	if (mouseX > bx - bwidth && mouseX < bx + bwidth && mouseY > by - bheight && mouseY < by + bheight) {
		if (keyPressed (BT_ATTACK) == 1)
			return 1;
		else if (keyPressed (BT_ALTATTACK) == 1)
			return 2;
		return 3;
	}

	return false;
}

script "ToggleShopSystem" (void) NET {
	SetHudSize (SCREEN_WIDTH, SCREEN_HEIGHT, 0);
	
	if (ShopGUIOpen[PlayerNumber ()] == 0) {
		ShopGUIOpen[PlayerNumber ()] = 1;
		mouseX = SCREEN_WIDTH/2;
		mouseY = SCREEN_HEIGHT/2;
		SetFont ("Graphics/ShopSystem/Background.png");
        HudMessage (s:"A"; HUDMSG_PLAIN, SHOPBACKGROUNDID, CR_UNTRANSLATED, 0.1, 0.1, 0.0);
		ACS_NamedExecute ("ShopSystemz", 0);
		Delay (1);
		SetPlayerProperty (0, 1, PROP_TOTALLYFROZEN);
		terminate;
	}
	else if (ShopGUIOpen[PlayerNumber ()] == 1) {
		ShopGUIOpen[PlayerNumber ()] = 0;
		mouseX = SCREEN_WIDTH/2;
		mouseY = SCREEN_HEIGHT/2;
		SetFont ("Graphics/ShopSystem/Background.png");
        HudMessage (s:"A";
			HUDMSG_FADEOUT, SHOPBACKGROUNDID, CR_UNTRANSLATED, 0.1, 0.1, 0.0001, 0.3);
		ACS_NamedTerminate ("ShopSystemz", 0);
		Delay (1);
		SetPlayerProperty (0, 0, PROP_TOTALLYFROZEN);
		terminate;
	}
}

script "ShopSystemz" (void) {
	int mouseXadd = GetPlayerInput (-1, INPUT_YAW);
	int mouseYadd = GetPlayerInput (-1, INPUT_PITCH);
	int CurrentPage = 0; // Current page. 0 == Main, 1 == Runes, 2 == Spheres, 3 == Health Items
	int Cash = CheckInventory ("Energy"); // The player's current amount of cash
	
	while (TRUE) {
		Cash = CheckInventory ("Energy");
		// move the cursor
		mouseXadd = GetPlayerInput (-1, INPUT_YAW);
		mouseYadd = GetPlayerInput (-1, INPUT_PITCH);

		mouseX -= mouseXadd / SENSITIVITY_X;
		mouseY -= mouseYadd / SENSITIVITY_Y;
		// prevent the cursor from going offscreen
		if (mouseX < 0)
			mouseX = 0;
        if (mouseX > SCREEN_WIDTH)
			mouseX = SCREEN_WIDTH;
        if (mouseY < 0)
			mouseY = 0;
        if (mouseY > SCREEN_HEIGHT)
			mouseY = SCREEN_HEIGHT;
		
        SetFont ("CURSOR");
        HudMessage (s:"A"; HUDMSG_FADEOUT, SHOPCURSORID, CR_UNTRANSLATED, mouseX*1.0+0.1, mouseY*1.0+0.1, 0.04, 0.3);

		if (CurrentPage == 0) { // Main
			if (ShopSystem_BasicButton ("M_BACK_D", "M_BACK_D", 8, 6, 8, 6, BACKBUTTON) == 1)
				ACS_NamedExecute ("ToggleShopSystem", 0);

			if (ShopSystem_BasicButton ("Graphics/ShopSystem/Runes.png", "Graphics/ShopSystem/RunesClicked.png", 394, 60, 50, 50, SHOPBUTTONS) == 1)
				CurrentPage = 1;
			if (ShopSystem_BasicButton ("Graphics/ShopSystem/Runes.png", "Graphics/ShopSystem/RunesClicked.png", 394, 60, 50, 50, SHOPBUTTONS) == 3)
				ShopSystem_PrintText ("Enter the Magical Runes menu.", "SmallFont");

			if (ShopSystem_BasicButton ("Graphics/ShopSystem/Spheres.png", "Graphics/ShopSystem/SpheresClicked.png", 567, 120, 50, 50, SHOPBUTTONS + 1) == 1)
				CurrentPage = 2;
			if (ShopSystem_BasicButton ("Graphics/ShopSystem/Spheres.png", "Graphics/ShopSystem/SpheresClicked.png", 567, 120, 50, 50, SHOPBUTTONS + 1) == 3)
				ShopSystem_PrintText ("Enter the Spheres menu.", "SmallFont");

			if (ShopSystem_BasicButton ("Graphics/ShopSystem/Health.png", "Graphics/ShopSystem/HealthClicked.png", 661, 232, 50, 50, SHOPBUTTONS + 2) == 1)
				CurrentPage = 3;
			if (ShopSystem_BasicButton ("Graphics/ShopSystem/Health.png", "Graphics/ShopSystem/HealthClicked.png", 661, 232, 50, 50, SHOPBUTTONS + 2) == 3)
				ShopSystem_PrintText ("Enter the Health items menu.", "SmallFont");
		}
		
		if (CurrentPage == 1) { // Runes
			if (ShopSystem_BasicButton ("M_BACK_D", "M_BACK_D", 8, 6, 8, 6, BACKBUTTON) == 1)
				CurrentPage = 0;

			if (ShopSystem_BasicButton ("Graphics/ShopSystem/Runes/Regeneration.png", "Graphics/ShopSystem/Runes/RegenerationClicked.png", 394, 60, 50, 50, SHOPBUTTONS) == 1)
				ShopSystem_BuyStuff ("RegenerationRune", 8500, 1);

			if (ShopSystem_BasicButton ("Graphics/ShopSystem/Runes/DoubleDamage.png", "Graphics/ShopSystem/Runes/DoubleDamageClicked.png", 567, 120, 50, 50, SHOPBUTTONS + 1) == 1)
				ShopSystem_BuyStuff ("DoubleDamageRune", 12000, 1);

			if (ShopSystem_BasicButton ("Graphics/ShopSystem/Runes/Agility.png", "Graphics/ShopSystem/Runes/AgilityClicked.png", 661, 232, 50, 50, SHOPBUTTONS + 2) == 1)
				ShopSystem_BuyStuff ("AgilityRune", 6000, 1);
			
			if (ShopSystem_BasicButton ("Graphics/ShopSystem/Runes/Drain.png", "Graphics/ShopSystem/Runes/DrainClicked.png", 567, 361, 50, 50, SHOPBUTTONS + 3) == 1)
				ShopSystem_BuyStuff ("DrainRune", 7000, 1);
			
			if (ShopSystem_BasicButton ("Graphics/ShopSystem/Runes/Regeneration.png", "Graphics/ShopSystem/Runes/RegenerationClicked.png", 394, 60, 50, 50, SHOPBUTTONS) == 3)
				ShopSystem_PrintCost (8500);
			else if (ShopSystem_BasicButton ("Graphics/ShopSystem/Runes/DoubleDamage.png", "Graphics/ShopSystem/Runes/DoubleDamageClicked.png", 567, 120, 50, 50, SHOPBUTTONS + 1) == 3)
				ShopSystem_PrintCost (15000);
			else if (ShopSystem_BasicButton ("Graphics/ShopSystem/Runes/Agility.png", "Graphics/ShopSystem/Runes/AgilityClicked.png", 661, 232, 50, 50, SHOPBUTTONS + 2) == 3)
				ShopSystem_PrintCost (6000);
			else if (ShopSystem_BasicButton ("Graphics/ShopSystem/Runes/Drain.png", "Graphics/ShopSystem/Runes/DrainClicked.png", 567, 361, 50, 50, SHOPBUTTONS + 3) == 3)
				ShopSystem_PrintCost (7000);
		}
		Delay (1);
	}
}