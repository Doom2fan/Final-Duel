script "FDNightvision" Enter { // Nightvision system
	// Not needed or desired in TitleMaps.
	if (GameType () == Game_Title_Map)
		Terminate;
	// FDNightvisionOn is used to turn on nightvision,
	// NVBattery is the nightvision battery
	int pln = PlayerNumber();
	int FDNVTics = 0; // tic counter, used for taking battery and other tic related things
	
	while (TRUE) {
		if (FDNVTics == 52 && checkInventory ("NightvisionUpgrade") == 0) // if the tic counter is on tic 52(or whatever number is used on the comparison)...
			FDNVTics = 0; // reset the counter
		else if (FDNVTics == 70 && checkInventory ("NightvisionUpgrade") == 1)
			FDNVTics = 0;
		else if (FDNVTics == 87 && checkInventory ("NightvisionUpgrade") == 2)
			FDNVTics = 0;
		if (checkInventory ("FDNightvisionOn") != 0 && checkInventory ("NVBattery") != 0) { // if nightvision is on and there's usable battery...
			GiveInventory ("PowerNightvision", 1); // turn on nightvision
			if (FDNVTics == 0) // if FDNVTics is zero...
				TakeInventory ("NVBattery", 1); // take one battery point
		}
		else if (checkInventory ("FDNightvisionOn") != 0 && checkInventory ("NVBattery") == 0) { // if nightvision is on and there's no usable battery
			TakeInventory ("PowerNightvision", 1); // take PowerNightvision
			TakeInventory ("FDNightvisionOn", 1); // take FDNightvisionOn
			ActivatorSound ("Nightvision/Off", 127); // play turning off sound
		}
		else if (checkInventory ("FDNightvisionOn") == 0) { // if nightvision is off, turn off nightvision and take FDNightvisionON
			TakeInventory ("PowerNightvision", 1);
			TakeInventory ("FDNightvisionOn", 1);
		}		
		Delay (1);
		if (checkInventory ("FDNightvisionOn") != 0) // if nightvision on...
			FDNVTics++; // add one tic.
	}
}

int FD_SS_OldSpeed [MAXPLAYERS];
int FD_SS_Sprinting [MAXPLAYERS];
int FD_SR_StaminaEmpty [MAXPLAYERS];
script "FDSprintSystem" ENTER {
	if (GameType () == Game_Title_Map) Terminate;
	int tics = 0;
	While (TRUE) {
		if (CheckWeapon ("SprintWeapon") && FD_SS_Sprinting [PlayerNumber ()] == 0) {
			SetActorProperty (0, APROP_Speed, FD_SS_OldSpeed [PlayerNumber ()]);
			FD_SS_Sprinting [PlayerNumber ()] = 0;
			tics = 0;
			DisableWeapon ("SprintWeapon", "FDSprinting");
		}
		if (keyDown (BT_USER1) && FD_SS_Sprinting [PlayerNumber ()] == 0 && CheckInventory ("FDStamina") >= 5 && !FD_SR_StaminaEmpty [PlayerNumber ()]) {
			FD_SS_Sprinting [PlayerNumber ()] = 1;
			FD_SS_OldSpeed [PlayerNumber ()] = GetActorProperty (0, APROP_Speed);
			DisableWeapon ("SprintWeapon", "FDSprinting");
		}
		if (keyUp (BT_USER1) && FD_SS_Sprinting [PlayerNumber ()] && !FD_SR_StaminaEmpty [PlayerNumber ()]) {
			SetActorProperty (0, APROP_Speed, FD_SS_OldSpeed [PlayerNumber ()]);
			FD_SS_Sprinting [PlayerNumber ()] = 0;
			tics = 0;
			DisableWeapon ("SprintWeapon", "FDSprinting");
		}
		if (CheckInventory ("FDSprinting") && FD_SS_Sprinting [PlayerNumber ()]) {
			if (CheckInventory ("FDStamina") >= 5)
			{
				if (CheckInventory ("FDSprinting") && tics >= 5) {
					tics = 0;
					if (!CheckInventory ("PowerAgilityRune") && GetVelocity () > 0)
						TakeInventory ("FDStamina", 5);
				}
				if (CheckInventory ("FDStamina") < 5) {
					SetActorProperty (0, APROP_Speed, FD_SS_OldSpeed [PlayerNumber ()]);
					FD_SS_Sprinting [PlayerNumber ()] = 0;
					FD_SR_StaminaEmpty [PlayerNumber ()] = 1;
					DisableWeapon ("SprintWeapon", "FDSprinting");
					restart;
				}
				if (CheckInventory ("FDSprinting") && ((abs (GetPlayerInput (-1, INPUT_FORWARDMOVE)) > 6400) || (abs (GetPlayerInput(-1, INPUT_SIDEMOVE)) > 6400)))
					SetActorProperty (0, APROP_Speed, 1.6);
				else if (CheckInventory ("FDSprinting") && !((abs (GetPlayerInput (-1, INPUT_FORWARDMOVE)) > 6400) || (abs (GetPlayerInput(-1, INPUT_SIDEMOVE)) > 6400)))
					SetActorProperty (0, APROP_Speed, 2.6);
				else if (!CheckInventory ("FDSprinting"))
					SetActorProperty (0, APROP_Speed, FD_SS_OldSpeed [PlayerNumber ()]);
			}
		}
		Delay (1);
		if (FD_SS_Sprinting [PlayerNumber ()])
			tics++;
	}
}

script "FD_StaminaRegeneration" ENTER {
	// Not needed or desired in TitleMaps.
	if (GameType () == Game_Title_Map) Terminate;
	int pln = PlayerNumber ();
	int StaminaTics = 0;
	int StaminaAmount, Health, MaxStamina;
	
	while (TRUE) {
		StaminaAmount = CheckInventory ("FDStamina");
		Health = GetActorProperty (0, APROP_HEALTH);
		MaxStamina = CheckInventoryMax ("FDStamina");
		if (CheckInventory ("PowerAgilityRune") && StaminaAmount != MaxStamina)
			GiveInventory ("FDStamina", 100000);
		if (Health > 50 && StaminaTics >= 2 && !CheckWeapon ("SprintWeapon")) {
			StaminaTics = 0;
			GiveInventory ("FDStamina", 1);
		}
		if (Health <= 50 && StaminaTics >= 5 && !CheckWeapon ("SprintWeapon")) {
			StaminaTics = 0;
			GiveInventory ("FDStamina", 1);
		}
		if (StaminaTics > 0 && StaminaAmount == MaxStamina || StaminaTics > 0 && CheckWeapon ("SprintWeapon"))
			StaminaTics = 0;			
		if (FD_SR_StaminaEmpty [PlayerNumber ()] == 1 && StaminaAmount >= 50)
			FD_SR_StaminaEmpty [PlayerNumber ()] = 0;
		Delay(1);
		if (StaminaAmount != MaxStamina)
			if (!CheckWeapon ("SprintWeapon"))
				StaminaTics++;
	}
}