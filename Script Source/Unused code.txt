/*
	// Names
	// This was used to show the current weapon's name in the HUD, it's here in case I ever make a Zandronum compatible version...
	if(checkWeapon("ActionMachineGun"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"M9A15 Carbine"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("Bullpup"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"M8A17 Bullpup"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("Rifle"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"M9A10 Rifle"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("DoomSSG"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"Double-Barreled Shotgun"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("DoubleBladedChainsaw"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"Double-Bladed Chainsaw"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("Enforcer"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"Enforcer"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("MancubusArm"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"Mancubus Arm"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("PumpActionShotgun"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"Tactical Shotgun"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("SonicRailgun"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"Sonic Railgun"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("SoulReaper"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"Soul Reaper"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("BFG10K"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"BFG10K"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("FDRocketLauncher"))
	{
		if(checkInventory ("RLSpeedBounce"))
		{
		SetFont("BIGFONT");
		hudMessage (s:"Rocket Launcher-Grenade:Speed"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
		}
		else
		{
		SetFont("BIGFONT");
		hudMessage (s:"Rocket Launcher-Grenade:Bounce"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
		}
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("BFG9000"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"BFG 9000"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("GrenadeLauncher"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"Grenade Launcher"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("Magic"))
	{
		if(checkInventory ("MStun"))
		{
		SetFont("BIGFONT");
		hudMessage (s:"Magic:Stun"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
		} else
		{
		SetFont("BIGFONT");
		hudMessage (s:"Magic:Freeze"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
		}
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("MeleeAttack"))
	{
		SetFont("BIGFONT");
		hudMessage (s:"Melee"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
	}
	//	---------------------------------------------------------------------------------------------------------------------------------
	if(checkWeapon("OPlasmaRifle"))
	{
		SetFont("BIGFONT");
			hudMessage (s:"Plasma Rifle"; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, 10000, CR_GREEN, 0.5, 0.0, 0);
		}
		//	---------------------------------------------------------------------------------------------------------------------------------
*/

/*
	// Mana regeneration
	// It's here in case I want to add mana regeneration back in
	script "Mana Regeneration" ENTER { // Mana Regeneration
		// Not needed or desired in TitleMaps.
		if (gameType () == Game_Title_Map)
			terminate;
		
		while(TRUE) {
			giveInventory ("Energy",1);	// Give one Mana point
			delay(8);
		}
	}
*/

/*
	// Stamina regeneration
	// This is not used anymore, so I will just leave it here
	script "StaminaRegen" (void) {
		// Not needed or desired in TitleMaps.
		if (gameType () == Game_Title_Map)
			terminate;
		
		int pln = playerNumber();
		int staminaTics = 0;
		
		while (TRUE) {
			if (staminaTics == 4) {
				staminaTics = 0;
			}
			
			if (checkInventory ("StaminaRegen") != 0 && checkInventory ("stamina") != 100) {
				if (staminaTics == 0) {
					giveInventory ("stamina",1);
				}
				delay(1);
			}
			
			delay(1);
			
			if (checkInventory ("StaminaRegen") != 0) 
				staminaTics++;
		}
		
		delay(1);
	}
*/

/*
	// Health regeneration
	// This was used for Chronos' HP regeneration, but he doesn't have health regeneration anymore
	script "HPRegen" (void)
	{
		int pln = playerNumber();
		
		while (TRUE) {
			if (checkInventory ("ChronosItem") && checkInventory ("Regeneration") && PlayerInGame(pln)) {
				if (getActorProperty (1000 + pln, APROP_HEALTH) < 100 && getActorProperty (1000 + pln, APROP_HEALTH) > 0) {
					setActorProperty (1000 + pln, APROP_HEALTH, (getActorProperty (1000 + pln, APROP_HEALTH)) + 1);
					delay(8);
				}
			}
			
			delay(1);
		}
		
		delay(1);
	}
*/