#define FD_WEAPONMAX 27
str FD_WeaponName[FD_WEAPONMAX] = { "MeleeAttack", "Sword", "FDChainsaw", "Enforcer", "Beretta", "Magnum", "Rifle", "FDShotgun", "PumpActionShotgun", "DoomSSG", "QuadShotgun", "AK47", "ActionMachineGun", "FDMinigun", "FDRocketLauncher", "Annihilator", "FDGrenadeLauncher", "FDPlasmaRifle", "SonicRailgun", "BioForceGun", "BFG10K", "SoulReaper", "SniperRifle", "FDCrossbow", "MancubusArm", "Magic", "Kukri" };
int FD_WeaponNumber[FD_WEAPONMAX] = { 1          , 2      , 3           , 4         , 5        , 6       , 7      , 8          , 9                  , 10       , 11           , 12    , 13                , 14         , 15                , 16           , 17                 , 18             , 19            , 20           , 21      , 22          , 23           , 24          , 25           , 26     , 27 };
int FD_LastWeapon[MAXPLAYERS];

// Functions
function int GetWeaponName (void) {
	for (int i = 0; i<FD_WEAPONMAX; i++)
	{
		if (CheckWeapon (FD_WeaponName[i])) return FD_WeaponNumber[i]-1;
	}
	return 0;
}

function void DisableWeapon (str meh) {
	if (checkWeapon (meh)) {
		SetWeapon (FD_WeaponName[FD_LastWeapon[PlayerNumber ()]]);
		TakeInventory (meh, 1);
		return;
	}
	FD_LastWeapon[PlayerNumber ()] = GetWeaponName ();
	GiveInventory (meh, 1);
	SetWeapon (meh);
}

// Scripts
script "SpareAmmoToMag" (int SpareAmmoType, int MagType, int MaxAmmo) {
	Int AmmoAdded = 0;
	DisableWeapon ("NullWeapon");
	Print (s:SpareAmmoType);
	While (TRUE) {
		int AmmoAmount = CheckInventory (SpareAmmoType);
		if (AmmoAdded == MaxAmmo) {
			AmmoAdded = 0;
			GiveInventory (MagType, 1);
		}
		if (AmmoAmount < MaxAmmo) {
			DisableWeapon ("NullWeapon");
			terminate;
		}
			TakeInventory (SpareAmmoType, 1);
			AmmoAdded++;
		if (CheckInventory ("Reloading")) {
			DisableWeapon ("NullWeapon");
			TakeInventory ("Reloading", 1);
		}
		Delay (5);
	}
}

// Scripts
script "LoadedAmmoToSpareAmmo" (int AmmoType, int SpareAmmoType) {
	int AmmoAmount = CheckInventory (AmmoType);
	for (int i = 0; i <= AmmoAmount; i++) {
		GiveInventory (SpareAmmoType, 1);
		TakeInventory (AmmoType, 1);
	}
}