/*#define FD_WEAPONMAX 26
str FD_WeaponName [FD_WEAPONMAX] = { "MeleeAttack", "Sword", "FDChainsaw", "Enforcer", "Beretta", "Magnum", "Rifle", "FDShotgun", "PumpActionShotgun", "DoomSSG", "QuadShotgun", "AK47", "ActionMachineGun", "FDMinigun", "FDRocketLauncher", "Annihilator", "FDGrenadeLauncher", "FDPlasmaRifle", "SonicRailgun", "BioForceGun", "SoulReaper", "SniperRifle", "FDCrossbow", "MancubusArm", "Magic", "Knife" };
int FD_WeaponNumber [FD_WEAPONMAX] = { 1          , 2      , 3           , 4         , 5        , 6       , 7      , 8          , 9                  , 10       , 11           , 12    , 13                , 14         , 15                , 16           , 17                 , 18             , 19            , 20           , 21          , 22           , 23          , 24           , 25     , 26 };*/
#define FD_DUMMYWEAPONMAX 2
str FD_DummyWeapons [2] = { "SprintWeapon", "NullWeapon" };
global str 54:FD_LastWeapon [];

// Functions
/*function int GetWeaponName (void) {
	for (int i = 0; i<FD_WEAPONMAX; i++) {
		if (CheckWeapon (FD_DummyWeapons[i])) 
			return -1;
		if (CheckWeapon (FD_WeaponName[i]))
			return FD_WeaponNumber[i]-1;
	}
	return -1;
}

function void LastWeapon (int mode) {
	if (mode != 0) {
		int LastWeaponNo = FD_LastWeapon[PlayerNumber ()];
		SetWeapon (FD_WeaponName[LastWeaponNo]);
	}
	else {
		int WeaponNumber = GetWeaponName ();
		if (WeaponNumber == -1)
			return;
		else
			FD_LastWeapon[PlayerNumber ()] = WeaponNumber;
	}
}*/

function void LastWeapon (int mode) {
	if (mode != 0) {
		SetWeapon (FD_LastWeapon[PlayerNumber ()]);
	}
	else {
		for (int i = 0; i < FD_DUMMYWEAPONMAX; i++) {
			if (StrIcmp (FD_LastWeapon[PlayerNumber ()], FD_DummyWeapons[i]) == 0)
				return;
		}
		FD_LastWeapon[PlayerNumber ()] = GetWeapon ();
	}
}

function void DisableWeapon (str meh, str blah) {
	if (meh == 0)
		meh = "NullWeapon";
	if (checkWeapon (meh)) {
		if (blah != 0)
			TakeInventory (blah, 99999);
		LastWeapon (1);
		return;
	}
	LastWeapon (0);
	GiveInventory (meh, 1);
	SetWeapon (meh);
}

// Scripts
// SynthFire stuff
script "FDSynthFire" (void) {
	While (TRUE) {
		if (!CheckInventory ("SynthFireActive"))
			Terminate;
		if (keyPressed (BT_ATTACK) && !CheckInventory ("SynthFireLeft"))
			GiveInventory ("SynthFireLeft", 1);
		if (keyPressed (BT_ALTATTACK) && !CheckInventory ("SynthFireRight"))
			GiveInventory ("SynthFireRight", 1);		
		Delay (1);
		if (!keyPressed (BT_ATTACK) && CheckInventory ("SynthFireLeft"))
			TakeInventory ("SynthFireLeft", 1);
		if (!keyPressed (BT_ALTATTACK) && CheckInventory ("SynthFireRight"))
			TakeInventory ("SynthFireRight", 1);
	}
}

script "FDSynthFire2" (void) {
	While (TRUE) {
		if (!CheckInventory ("SynthFireActive"))
			Terminate;
		if (keyDown (BT_ATTACK) && !CheckInventory ("SynthFireLeft"))
			GiveInventory ("SynthFireLeft", 1);
		if (keyDown (BT_ALTATTACK) && !CheckInventory ("SynthFireRight"))
			GiveInventory ("SynthFireRight", 1);		
		Delay (1);
		if (!keyDown (BT_ATTACK) && CheckInventory ("SynthFireLeft"))
			TakeInventory ("SynthFireLeft", 1);
		if (!keyDown (BT_ALTATTACK) && CheckInventory ("SynthFireRight"))
			TakeInventory ("SynthFireRight", 1);
	}
}

script "FDSynthFireAllowChange" (void) {
	int result = !CheckInventory ("SynthFireRightReady");
	SetResultValue (result);
}

// BFG stuff
script "SetTIDForBFGBall" (void) {
	SetActivatorToTarget (0);
	int result = -1000 - PlayerNumber ();
	SetResultValue (result);
}

script "CheckBFGBall" (void) {
	if (ClassifyActor (-1000) & ACTOR_MISSILE) {
		SetResultValue (1);
	}
	else
		SetResultValue (0);
}

script "KillBFGBall" (void) {
	int BFGBallTID = -1000 - PlayerNumber ();
	SetActorVelocity (BFGBallTID, 0.0, 0.0, 0.0, 0, 0);
	SetActorState (BFGBallTID, "KilledByPlayer");
	Thing_ChangeTID (BFGBallTID, 0);
}

// Demon mode
script "FDDemonMode" (void) {
	int ticCounter = 0;
	while (true) {
		if (!CheckInventory ("DemonModeOn") && !CheckWeapon ("DemonMode")) {
			TakeInventory ("DemonMode", 1);
			terminate;
		}
		if (CheckInventory ("PsiEnergy") < 5) {
			TakeInventory ("DemonModeOn", 1);
		}
		ticCounter++;
		Delay (1);
		if (ticCounter >= 35) {
			TakeInventory ("PsiEnergy", 5);
			ticCounter = 0;
		}
	}
}

script "FDDemonModeAltDamage" (void) {
	// Pray to the RNG god
	int BaseDamage = Random (Random (1, 3), Random (4, 8));
	int Randomizer1 = Random (Random (1, 10), Random (1, 10));
	int Randomizer2 = Random (0, Random (1, 2));
	int Result = 0;
	
	int x = Randomizer1 * BaseDamage;
	if (Randomizer2 == 1) {
		Result = (x * Random (2, 4)) + ((x / Random (2, 5)) >> 16 * Random (1, 2));
	} else if (Randomizer2 == 2)
		Result = x + Random (2, 4) * (x / Random (2, 5));
	else
		Result = x * 2.5 >> 16;
	
	SetResultValue (Result);
}

script "FDDemonModeAltExpDamage" (void) {
	int Randomizer1 = Random (
						Random (
							Random (0, 64),
							Random (65, 128)),
						Random (
							Random (129, 193),
							Random (194, 256)));
	int Randomizer2 = Random (1, 4);
	int Result = 0;
	
	Result = (Randomizer1 / Randomizer2) >> 16;
	
	SetResultValue (Result);
}

script "FDDemonModeAltExpRadius" (void) {
	int Randomizer1 = Random (
						Random (
							Random (0, 32),
							Random (33, 64)),
						Random (
							Random (65, 96),
							Random (96, 128)));
	int Randomizer2 = Random (1, 4);
	int Result = 0;
	
	Result = (Randomizer1 / Randomizer2) >> 16;
	
	SetResultValue (Result);
}

int FDDemonModeAltExpRTMass [13] = {
	100,
	250,
	580,
	379,
	158,
	190,
	129,
	1598,
	2000,
	1299,
	1598,
	159,
	1795
};

int FDDemonModeAltExpRTForce [12] = {
	25,
	30,
	45,
	10,
	100,
	94,
	38,
	19,
	67,
	198,
	279,
	17
};

script "FDDemonModeAltExpRT" (void) {
	// Mass randomizer
	int Randomizer1 = Random ( 						// L0: None
						Random ( 					// L1: Min
							Random ( 				// L2: Min
								Random (0, 2), 		// L3: Min
								Random (3, 4)), 	// L3: Max
							Random ( 				// L2: Max
								Random (5, 7), 		// L3: Min
								Random (8, 10))),	// L3: Max
						Random ( 					// L1: Max
							Random (11, 12),		// L2: Min
							Random (12, 13)));		// L2: Max
	// Force randomizer
	int Randomizer2 = Random (
						Random ( 					// L1: Min
							Random ( 				// L2: Min
								Random (0, 1), 		// L3: Min
								Random (2, 3)), 	// L3: Max
							Random ( 				// L2: Max
								Random (4, 6), 		// L3: Min
								Random (7, 8))),	// L3: Max
						Random ( 					// L1: Max
							Random (9, 10),			// L2: Min
							Random (11, 12)));		// L2: Max
	// Result
	int Result = 0;
	
	// Result = Force * (2 * Mass)
	Result = FDDemonModeAltExpRTForce [Randomizer2] * (2 * FDDemonModeAltExpRTMass [Randomizer1]);
	
	SetResultValue (Result >> 16);
}

script "FDDemonModeAltExpFlagRandomizer" (void) {
	int Result = 0;
	
	if (GetCVar ("FD_IDontBelieveInGod"))
		Result = 0;
	else
		Result = Random (Random (0, 1), Random (1, 0));
	
	SetResultValue (Result);
}