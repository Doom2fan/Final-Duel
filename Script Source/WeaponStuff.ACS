/*#DEFINE FD_WEAPONMAX 26
str FD_WeaponName [FD_WEAPONMAX] = { "MeleeAttack", "Sword", "FDChainsaw", "Enforcer", "Beretta", "Magnum", "Rifle", "FDShotgun", "PumpActionShotgun", "DoomSSG", "QuadShotgun", "AK47", "ActionMachineGun", "FDMinigun", "FDRocketLauncher", "Annihilator", "FDGrenadeLauncher", "FDPlasmaRifle", "SonicRailgun", "BioForceGun", "SoulReaper", "SniperRifle", "FDCrossbow", "MancubusArm", "Magic", "Knife" };
int FD_WeaponNumber [FD_WEAPONMAX] = { 1          , 2      , 3           , 4         , 5        , 6       , 7      , 8          , 9                  , 10       , 11           , 12    , 13                , 14         , 15                , 16           , 17                 , 18             , 19            , 20           , 21          , 22           , 23          , 24           , 25     , 26 };*/
#DEFINE FD_DUMMYWEAPONMAX 2
str FD_DummyWeapons [FD_DUMMYWEAPONMAX] = { "SprintWeapon", "NullWeapon" };
global str 54:FD_LastWeapon [];

// functions
/*function int getWeaponName (void) {
	for (int i = 0; i < FD_WEAPONMAX; i++) {
		if (checkWeapon (FD_DummyWeapons [i])) 
			return -1;
		
		if (checkWeapon (FD_WeaponName [i]))
			return FD_WeaponNumber [i]-1;
	}
	
	return -1;
}

function void lastWeapon (int mode) {
	if (mode != 0) {
		int lastWeaponNo = FD_LastWeapon [playerNumber ()];
		setWeapon (FD_LastWeapon [lastWeaponNo]);
	} else {
		int WeaponNumber = getWeaponName ();
		if (WeaponNumber == -1)
			return;
		else
			FD_LastWeapon [playerNumber ()] = WeaponNumber;
	}
}*/

function void lastWeapon (int mode) {
	if (mode != 0) {
		setWeapon (FD_LastWeapon [playerNumber ()]);
	} else {
		for (int i = 0; i < FD_DUMMYWEAPONMAX; i++) {
			if (strIcmp (FD_lastWeapon [playerNumber ()], FD_DummyWeapons [i]) == 0)
				return;
		}
		FD_LastWeapon [playerNumber ()] = getWeapon ();
	}
}

function void disableWeapon (str meh, str blah) {
	if (meh == 0)
		meh = "NullWeapon";
	
	if (checkWeapon (meh)) {
		if (blah != 0)
			takeInventory (blah, 99999);
		lastWeapon (1);
		return;
	}
	
	lastWeapon (0);
	giveInventory (meh, 1);
	setWeapon (meh);
}

// Scripts
// SynthFire stuff
script "FDSynthFire" (void) {
	while (TRUE) {
		if (!checkInventory ("SynthFireActive"))
			terminate;
		
		if (keyPressed (BT_ATTACK) && !checkInventory ("SynthFireLeft"))
			giveInventory ("SynthFireLeft", 1);
		
		if (keyPressed (BT_ALTATTACK) && !checkInventory ("SynthFireRight"))
			giveInventory ("SynthFireRight", 1);
		
		delay (1);
		
		if (!keyPressed (BT_ATTACK) && checkInventory ("SynthFireLeft"))
			takeInventory ("SynthFireLeft", 1);
		
		if (!keyPressed (BT_ALTATTACK) && checkInventory ("SynthFireRight"))
			takeInventory ("SynthFireRight", 1);
	}
}

script "FDSynthFire2" (void) {
	while (TRUE) {
		if (!checkInventory ("SynthFireActive"))
			terminate;
		
		if (keyDown (BT_ATTACK) && !checkInventory ("SynthFireLeft"))
			giveInventory ("SynthFireLeft", 1);
		
		if (keyDown (BT_ALTATTACK) && !checkInventory ("SynthFireRight"))
			giveInventory ("SynthFireRight", 1);
		
		delay (1);
		
		if (!keyDown (BT_ATTACK) && checkInventory ("SynthFireLeft"))
			takeInventory ("SynthFireLeft", 1);
		
		if (!keyDown (BT_ALTATTACK) && checkInventory ("SynthFireRight"))
			takeInventory ("SynthFireRight", 1);
	}
}

script "FDSynthFireAllowChange" (void) {
	int result = !checkInventory ("SynthFireRightReady");
	
	setResultValue (result);
}

// BFG stuff
script "SetTIDForBFGBall" (void) {
	setActivatorToTarget (0);
	int result = -1000 - playerNumber ();
	
	setResultValue (result);
}

script "CheckBFGBall" (void) {
	if (ClassifyActor (-1000) & ACTOR_MISSILE)
		setResultValue (1);
	else
		setResultValue (0);
}

script "KillBFGBall" (void) {
	int BFGBallTID = -1000 - playerNumber ();
	setActorVelocity (BFGBallTID, 0.0, 0.0, 0.0, 0, 0);
	setActorState (BFGBallTID, "KilledByPlayer");
	thing_ChangeTID (BFGBallTID, 0);
}

// Demon mode
script "FDDemonMode" (void) {
	int ticCounter = 0;
	while (TRUE) {
		if (!checkInventory ("DemonModeOn") && !checkWeapon ("DemonMode")) {
			takeInventory ("DemonMode", 1);
			terminate;
		}
		if (checkInventory ("PsiEnergy") < 5) {
			takeInventory ("DemonModeOn", 1);
		}
		
		ticCounter++;
		delay (1);
		
		if (ticCounter >= 35) {
			takeInventory ("PsiEnergy", 5);
			ticCounter = 0;
		}
	}
}

script "FDDemonModeAltDamage" (void) {
	int randomizer = random (0, 2);
	int Result = 50;
	
	int x = random (1, 10) * random (1, 8);
	
	switch (randomizer) {
	case 1:
		Result = (x * random (2, 4)) + ((x / random (2, 5)) * random (1, 2));
	
	case 2:
		Result = (x + random (2, 4)) * (x / random (2, 5));
	
	Default:
		Result = x * random (2, 3);
	}
	
	setResultValue (Result);
}

script "FDDemonModeAltExpDamage" (void) {
	setResultValue (256 / random (1, 4));
}

script "FDDemonModeAltExpRadius" (void) {
	setResultValue (128 / random (1, 4));
}

#DEFINE FDDemonModeAltExpRTMass_Count 13
int FDDemonModeAltExpRTMass [FDDemonModeAltExpRTMass_Count] = {
	100,
	250,
	580,
	379,
	158,
	190,
	129,
	185,
	200,
	138,
	391,
	519,
	579
};
 
#DEFINE FDDemonModeAltExpRTForce_Count 11
int FDDemonModeAltExpRTForce [FDDemonModeAltExpRTForce_Count] = {
	25,
	30,
	45,
	10,
	56,
	75,
	38,
	19,
	67,
	28,
	17
};

script "FDDemonModeAltExpRT" (void) {
	// Mass randomizer
	int randomizer1 = random (1, FDDemonModeAltExpRTMass_Count) - 1;
	// Force randomizer
	int randomizer2 = random (1, FDDemonModeAltExpRTForce_Count) - 1;

	// Result = Force * (2 * Mass)
	int Result = FDDemonModeAltExpRTForce [randomizer2] * (2 * FDDemonModeAltExpRTMass [randomizer1]);

	setResultValue (Result);
}

script "FDDemonModeAltExpFlagrandomizer" (void) {
	if (getCVAR ("FD_IDontBelieveInGod"))
		setResultValue (0);
	else
		setResultValue (random (0, 1));
}