#define C_TID		1000	//Default camera tid
#define MAX_R		56		//Maximum radius (or distance from the player)
#define ADJUST_R	8		//Amount to adjust the camera by
#define VIEW_HEIGHT	61.0	//The approximate height of the player's view

bool camera_mode[MAXPLAYERS];		//Variable for turning the camera on or off.
	
Script "FDChasecamOn" (VOID)
{
	camera_mode[PlayerNumber ()] = ON;
	ACS_NamedExecuteAlways ("FDChasecam", 0, PlayerNumber ());
}


Script "FDChasecam" (int p_num)
{
	int r = MAX_R;
	
	while (camera_mode[p_num] == ON)
	{	
		int a = GetActorAngle (0);
		int p = GetActorPitch (0);
		int x = GetActorX (0);
		int y = GetActorY (0);
		int z = GetActorZ (0) + VIEW_HEIGHT;
		int xyr = r * cos (p) >> 16;
		
		if (!ThingCountName ("Chasecam", C_TID+p_num))
		{
			while (!Spawn ("Chasecam", x-cos(a)*xyr, y-sin(a)*xyr, z+sin(p)*r, C_TID+p_num, a >> 8) && r > 0)
			{
				r -= ADJUST_R;
				xyr = cos (p) * r >> 16;
			}
			if (ThingCountName ("Chasecam", C_TID + p_num)) ChangeCamera (C_TID + p_num, 0, 0);
			else
			{
				camera_mode[p_num] = OFF;
				Print (s:"Camera script failed to initialize.");
			}
		}
		else
		{
			while (!SetActorPosition (C_TID+p_num, x-cos(a)*xyr, y-sin(a)*xyr, z+sin(p)*r, 0) && r > 0)
			{
				r -= ADJUST_R;
				xyr = cos (p) * r >> 16;
			}
			SetActorAngle (C_TID + p_num, a);
			SetActorPitch (C_TID + p_num, p);
			if (r < MAX_R) r += ADJUST_R;
		}
		delay (1);
	}
}

Script "FDChasecamOff" (VOID)
{
	camera_mode[PlayerNumber ()] = OFF;
	Thing_Remove (C_TID + PlayerNumber ());
}

Script "FDChasecamKillOnDisconnect" (int pln) DISCONNECT
{
	camera_mode[pln] = OFF;
	Thing_Remove (C_TID + pln);
}