Actor SlugCasing : CasingBase
{
	Height 12
	Radius 9
	SeeSound "Weapons/shell"
	States
	{
	Spawn:
		TNT1 A 0
		CAS4 ABCDEFGH 2 A_SpawnItem("SmokingPieceSmoke")
		Loop
	Death:
		CAS4 A 0 A_Jump(256,"Rest1","Rest2","Rest3","Rest4","Rest5","Rest6","Rest7","Rest8")
		Goto Rest1
    Rest1:
		CAS4 A 1000
		Goto Fade
    Rest2:
		CAS4 B 1000
		Goto Fade
    Rest3:
		CAS4 C 1000
		Goto Fade
    Rest4:
		CAS4 D 1000
		Goto Fade
    Rest5:
		CAS4 E 1000
		Goto Fade
    Rest6:
		CAS4 F 1000
		Goto Fade
    Rest7:
		CAS4 G 1000
		Goto Fade
    Rest8:
		CAS4 H 1000
		Goto Fade
    Fade:
		"----" A 3 A_FadeOut(0.03)
		Loop
	}
}
Actor SlugCasingSpawn : CasingSpawnerBase
{
	States
	{
	Spawn:
		TNT1 A 1 NoDelay A_CustomMissile("SlugCasing",0,0,random(80,100),2,random(-40,-60))
		Stop
	}
}
Actor DroppedPumpActionShotgun : DroppedWeaponBase
{
	States
	{
	Spawn:
		SHTG A 1
		Loop
	Death:
		TNT1 A 0 A_SpawnItemEx("PumpActionShotgun")
		Stop
	}
}
Actor PASEmpty : Boolean { }
Actor PASSlugs : Boolean { }
Actor PASPump  : Boolean { }
Actor PumpActionShotgun : FDWeapon 30003
{
	//$Category Final Duel-Weapons
	//$Title Tactical Shotgun
	//$Sprite SHTGA0
	Tag "$TAGPAS"
	Obituary "$OBPAS"
	Inventory.PickupMessage "$GOTPAS"
	Weapon.kickback 100
	Weapon.AmmoType "AmmoPAShotgun"
	Weapon.AmmoType2 "Shell2"
	Weapon.AmmoGive1 0
	Weapon.AmmoUse 1
	Weapon.AmmoUse2 0
	Inventory.Icon "SHTGA0"
	Inventory.PickupSound "misc/gunpickup"
	+AMMO_OPTIONAL
	+NOAUTOFIRE
	+NOALERT
	States
	{
	Spawn:
		SHTG A -1
		stop
	// Buckshot
	Ready:
		SGGS DCBA 1
	Ready2:
		TNT1 A 0 A_JumpIfInventory("PASSlugs",1,"Ready2.Slug")
		TNT1 A 0 A_JumpIfInventory("DropDatWeapon",1,"DropWeapon")
		TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"Kicking")
		TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		SGG1 A 1 A_WeaponReady
		Loop
	DropWeapon:
		TNT1 A 0 A_TakeInventory ("DropDatWeapon", 1)
		TNT1 A 0 A_FireCustomMissile("DroppedPumpActionShotgun", 0, 0, 0)
		TNT1 A 0 A_TakeInventory("PumpActionShotgun", 1)
		Stop
	Deselect: 
		TNT1 A 0 A_JumpIfHealthLower (0, "DeselectDEAD")
		SGGS ABCD 1
		SGG1 A 0 A_Lower
		Wait
	Select:
		SGG1 A 0 A_Raise
		Wait
	Fire:
		TNT1 A 0 A_JumpIfInventory("PASSlugs",1,"Fire.Slug")
		TNT1 A 0 A_JumpIfNoAmmo ("DryFire")
		TNT1 A 0 A_JumpIfInventory("PASPump",1,"Pump")
		TNT1 A 0 A_FireCustomMissile("TacticalShotgunTracer", frandom(-3.0,3.0), 1, 0, -2, 0, frandom(-3.0,3.0))
		TNT1 AAAAAAAA 0 A_FireCustomMissile("TacticalShotgunTracer",frandom(-3.0,3.0), 0, 0, -2, 0, frandom(-3.0,3.0))
		TNT1 A 0 A_Recoil(cos(pitch) * 1.5)
		TNT1 A 0 A_AlertMonsters
		TNT1 A 0 A_PlaySound ("PAShotgun/Fire", CHAN_WEAPON)
		SGGF AABB 1 Bright A_SetPitch(pitch - 0.5)
		SGGF EDC 2
		SGG1 A 1
		SGG1 A 0 A_GiveInventory("PASPump",1)
		Goto Ready2
	Pump:
		SGG1 A 2 A_TakeInventory("PASPump",1)
		SGGF FGHIJKLM 2
		TNT1 A 0 A_PlaySound ("PAShotgun/Pump", 5)
		SGGF NOPQ 1
		TNT1 A 0 A_FireCustomMissile("ShellCasingSpawn2",0,0,15,-10)
		SGGF QPONMLKJIHGF 1
		SGG1 A 1
		Goto Ready2
	DryFire:
		SGG1 A 0 A_PlaySound("Weapons/empty")
		TNT1 A 0 A_JumpIfInventory("EnableAutoReload",1,"DryReload")
		Goto Ready2
    DryReload:
		TNT1 A 0 A_GiveInventory("Reloading",1)
    Reload:
		TNT1 A 0 A_JumpIfInventory("AmmoPAShotgun",1,"Reload2")
		TNT1 A 0 A_GiveInventory("PASEmpty",1)
	Reload2:
		TNT1 A 0 A_JumpIfInventory("Reloading",1,1)
		Goto DontReload
		TNT1 A 0 A_JumpIfInventory("AmmoPAShotgun",4,"DontReload")
        TNT1 A 0 A_JumpIfInventory("Shell2",1,1)
        Goto DontReload
		TNT1 A 0 A_JumpIfInventory ("PASPump", 1, "Pump")
		SGR1 ABCDEF 2
		Goto InsertShells
	DontReload:
		TNT1 A 0 A_TakeInventory("Reloading")
		TNT1 A 0 A_JumpIfInventory("PASSlugs",1,"Ready2.Slug")
		Goto Ready2
    InsertShells:
		TNT1 A 0 A_JumpIfInventory("PASEmpty",1,"InsertFirstShell")
	    TNT1 A 0 A_JumpIfInventory("Reloading",1,1)
		Goto Reloaded
		TNT1 A 0 A_JumpIfInventory("AmmoPAShotgun",4,"Reloaded")
		TNT1 A 0 A_JumpIfInventory("Shell2",1,1)
		Goto Reloaded
		SGR2 ABCDE 2
		TNT1 A 0 A_PlaySound ("PAShotgun/Shell", CHAN_WEAPON)
		SGR2 FGHI 1
		TNT1 A 0 A_GiveInventory("AmmoPAShotgun",1)
		TNT1 A 0 A_TakeInventory("Shell2",1)
		Goto InsertShells
	InsertFirstShell:
	    TNT1 A 0 A_JumpIfInventory("Reloading",1,1)
		Goto Reloaded
		TNT1 A 0 A_JumpIfInventory("AmmoPAShotgun",4,"Reloaded")
		TNT1 A 0 A_JumpIfInventory("Shell2",1,1)
		Goto Reloaded
		TNT1 A 0 A_TakeInventory("PASPump", 1)
		SGR2 ABCDE 2
		TNT1 A 0 A_PlaySound ("PAShotgun/Shell", CHAN_WEAPON)
		SGR2 FGHI 1
		TNT1 A 0 A_GiveInventory("AmmoPAShotgun",1)
		TNT1 A 0 A_TakeInventory("Shell2",1)
		SGR1 FEDCBA 2
		SGG1 A 2
		SGGF FGHIJKLM 2
		TNT1 A 0 A_PlaySound ("PAShotgun/Pump", 5)
		SGGF NOPQQPONMLKJIHGF 1
		SGG1 A 2
		SGR1 ABCDEF 2
		TNT1 A 0 A_TakeInventory("PASEmpty",1)
		Goto InsertShells

		// Slug

	Ready2.Slug:
		TNT1 A 0 A_JumpIfInventory("PASSlugs",1,1)
		Goto Ready2
		TNT1 A 0 A_JumpIfInventory("DropDatWeapon",1,"DropWeapon")
		TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload.Slug")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"Kicking")
		TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		SGG1 A 1 A_WeaponReady
		Loop
	Fire.Slug:
		TNT1 A 0 A_JumpIfInventory("AmmoPAShotgunSlug",1,1)
		Goto DryFire.Slug
		TNT1 A 0 A_JumpIfInventory("PASPump",1,"Pump.Slug")
		TNT1 A 0 A_FireCustomMissile("TSRifledSlug", frandom(-0.8, 0.8), 0, 0, 0, 0, frandom(-1.0, 1.0))
		TNT1 A 0 A_Recoil(cos(pitch) * 1.5)
		TNT1 A 0 A_TakeInventory("AmmoPAShotgunSlug", 1)
		TNT1 A 0 A_AlertMonsters
		TNT1 A 0 A_PlaySound ("PAShotgun/Fire", CHAN_WEAPON)
		SGGF AABB 1 Bright A_SetPitch(pitch - 0.625)
		SGGF EDC 2
		SGG1 A 1
		SGG1 A 0 A_GiveInventory("PASPump",1)
		Goto Ready2.Slug
	Pump.Slug:
		SGG1 A 2 A_TakeInventory("PASPump",1)
		SGGF FGHIJKLM 2
		TNT1 A 0 A_PlaySound ("PAShotgun/Pump", 5)
		SGGF NOPQ 1
		TNT1 A 0 A_FireCustomMissile("SlugCasingSpawn",0,0,15,-10)
		SGGF QPONMLKJIHGF 1
		SGG1 A 1
		Goto Ready2.Slug
	DryFire.Slug:
		SGG1 A 0 A_PlaySound("Weapons/empty")
		TNT1 A 0 A_JumpIfInventory("EnableAutoReload",1,"DryReload.Slug")
		Goto Ready2.Slug
	DryReload.Slug:
		TNT1 A 0 A_GiveInventory("Reloading",1)
    Reload.Slug:
		TNT1 A 0 A_JumpIfInventory("AmmoPAShotgunSlug",1,"Reload2.Slug")
		TNT1 A 0 A_GiveInventory("PASEmpty",1)
	Reload2.Slug:
		TNT1 A 0 A_JumpIfInventory("Reloading",1,1)
		Goto DontReload
		TNT1 A 0 A_JumpIfInventory("AmmoPAShotgunSlug",4,"DontReload")
        TNT1 A 0 A_JumpIfInventory("Slug",1,1)
        Goto DontReload
		TNT1 A 0 A_JumpIfInventory ("PASPump", 1, "Pump.Slug")
		SGR1 ABCDEF 2
		Goto InsertShells.Slug
    InsertShells.Slug:
		TNT1 A 0 A_JumpIfInventory("PASEmpty",1,"InsertFirstShell.Slug")
	    TNT1 A 0 A_JumpIfInventory("Reloading",1,1)
		Goto Reloaded
		TNT1 A 0 A_JumpIfInventory("AmmoPAShotgunSlug",4,"Reloaded")
		TNT1 A 0 A_JumpIfInventory("Slug",1,1)
		Goto Reloaded
		SGR2 ABCDE 2
		TNT1 A 0 A_PlaySound ("PAShotgun/Shell", CHAN_WEAPON)
		SGR2 FGHI 1
		TNT1 A 0 A_GiveInventory("AmmoPAShotgunSlug",1)
		TNT1 A 0 A_TakeInventory("Slug",1)
		Goto InsertShells.Slug
	InsertFirstShell.Slug:
	    TNT1 A 0 A_JumpIfInventory("Reloading",1,1)
		Goto Reloaded
		TNT1 A 0 A_JumpIfInventory("AmmoPAShotgunSlug",4,"Reloaded")
		TNT1 A 0 A_JumpIfInventory("Slug",1,1)
		Goto Reloaded
		TNT1 A 0 A_TakeInventory("PASPump", 1)
		SGR2 ABCDE 2
		TNT1 A 0 A_PlaySound ("PAShotgun/Shell", CHAN_WEAPON)
		SGR2 FGHI 1
		TNT1 A 0 A_GiveInventory("AmmoPAShotgunSlug",1)
		TNT1 A 0 A_TakeInventory("Slug",1)
		SGR1 FEDCBA 2
		SGG1 A 2
		SGGF FGHIJKLM 2
		TNT1 A 0 A_PlaySound ("PAShotgun/Pump", 5)
		SGGF NOPQQPONMLKJIHGF 1
		SGG1 A 2
		SGR1 ABCDEF 2
		TNT1 A 0 A_TakeInventory("PASEmpty",1)
		Goto InsertShells.Slug

		// Etc
	
	Reloaded:
		SGR1 FEDCBA 2
		SGG1 A 2
		Goto DontReload
	Altfire:
		TNT1 A 0 A_JumpIfInventory("PASSlugs",1,5)
		TNT1 A 0 A_GiveInventory("PASSlugs",1)
		TNT1 A 0 A_PlaySound("Weapons/Mode",CHAN_WEAPON,1.5)
		TNT1 A 0 A_Print ("- Slug -")
		SGG1 A 6
		Goto Ready2.Slug
		TNT1 A 0 A_TakeInventory("PASSlugs",1)
		TNT1 A 0 A_PlaySound("Weapons/Mode",CHAN_WEAPON,1.5)
		TNT1 A 0 A_Print ("- Buckshot -")
		SGG1 A 6
		Goto Ready2
	}
}
Actor AmmoPAShotgun : AMMO
{
	Inventory.MaxAmount 4
	Ammo.BackpackMaxAmount 4
	+IGNORESKILL
}
Actor AmmoPAShotgunSlug : AMMO
{
	Inventory.MaxAmount 4
	Ammo.BackpackMaxAmount 4
	+IGNORESKILL
}
Actor TSRifledSlug
{
	Height 16
	Radius 8
	Damage (random(10,35) * 10)
	Speed 50
	Obituary "$OBPAS"
	DamageType RifledSlug
	Projectile
	+NoExtremeDeath
	+BLOODSPLATTER
	-DontSplash
	+NoExtremeDeath
	Decal Bullet
	States // Model by Alex_Mercer
	{
	Spawn:
		SLUG A 1
		Loop
	Crash:
	Death: // Sprites by Neoworm
		TNT1 A 0 A_ChangeFlag("ForceXYBillboard",1)
		TNT1 A 0 A_SetScale(0.5)
		TNT1 AAAA 0 A_CustomMissile("WallPart",0,0,random(0,360),2,random(-20,80))
		TNT1 A 0 A_SpawnItem("ShotSmoke")
		TNT1 A 0 A_Explode(64,64)
		XPL3 ABCDEFGHIJKLMNOPQ 1 Bright Light(RIFLSLUGEXPL)
		Stop
	}
}