Actor AmmoAnnihilator : AMMO
{
	Inventory.MaxAmount 80
	Ammo.BackpackMaxAmount 80
	+IGNORESKILL
}
Actor Annihilator : FDWeapon 30090
{
	//$Category Final Duel-Weapons
	//$Sprite ANHGZ0
	Tag "$TAGANNIHILATOR"
	Inventory.PickupMessage "$GOTANNIHILATOR"
	Obituary "$OBANNIHILATOR"
	Inventory.PickupSound "misc/gunpickup"
	// Weapon.SisterWeapon AnnihilatorPowered
	Weapon.AmmoUse 20
	Weapon.AmmoUse2 0
	Weapon.AmmoGive 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType "AmmoAnnihilator"
	Weapon.AmmoType2 "Cell2"
	+WEAPON.NOALERT
	+WEAPON.NOAUTOFIRE
	+AMMO_OPTIONAL
	+ALT_AMMO_OPTIONAL
	States
	{
	Spawn:
		ANHG Z -1
		Stop
	Ready:
		ANHS CBA 1
	Ready2:
		TNT1 A 0 A_JumpIfInventory("Kicking", 1, "Kicking")
		TNT1 A 0 A_JumpIfInventory("Reloading", 1, "Reload")
		TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		ANHG A 1 A_WeaponReady
		Loop
	Select:
		TNT1 A 0 A_Raise
		Wait
	Deselect:
		ANHS ABC 1
		TNT1 A 0 A_Lower
		Wait
	Fire:
		TNT1 A 0 A_JumpIfNoAmmo("DryFire")
		TNT1 A 0 A_PlaySound("Annihilator/Fire", CHAN_WEAPON)
		ANHG B 1 Bright A_FireCustomMissile("AnnihilatorMissile")
		TNT1 A 0 A_Recoil(cos(pitch) * 6.0)
		ANHG CDEFG 1 A_SetPitch(pitch - 2.5)
		Goto Ready2
	DryFire:
		TNT1 A 0 A_PlaySound("Annihilator/DryFire")
		TNT1 A 0 A_JumpIfInventory("EnableAutoReload",1,"Reload")
		Goto Ready2
	Reload:
		TNT1 A 0 A_TakeInventory("Reloading", 1)
		TNT1 A 0 A_JumpIfInventory("AmmoAnnihilator", 80, "Ready2")
        TNT1 A 0 A_JumpIfInventory("Cell", 1, 1)
        Goto Ready2
		ANHR ABCDE 2
		ANHR F 20 A_PlaySound("Annihilator/Out", CHAN_WEAPON)
		TNT1 A 0 A_PlaySound("Annihilator/In", CHAN_WEAPON)
		ANHR GHIJKLMNOPQRS 2
		TNT1 A 0 A_TakeInventory("AmmoAnnihilator", 80)
		TNT1 A 0 A_GiveInventory("AmmoAnnihilator", 80)
		TNT1 A 0 A_TakeInventory("Cell2", 1)
		Goto Ready2
	}
}

ACTOR AnnihilatorMissile
{
	Radius 11
	Height 8
	Speed 35
	Damage (random(1,12) * 40)
	Scale .28
	DamageType Annihilator
	Renderstyle Add
	Projectile
	+FORCEXYBILLBOARD
	+DONTSPLASH
	Obituary "$OBANNIHILATOR"
	DeathSound "Annihilator/Explode"
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_PlaySound("Annihilator/Fly", CHAN_BODY, 1.0, 1)
	Spawn2:
		GFLR A 1 bright A_SpawnItemEx("AnnihilatorMissileTrail",-5,0,0,0,0,0,0,SXF_CLIENTSIDE,0)
		GFLR A 1 bright A_SpawnItemEx("AnnihilatorMissileTrail",-10,0,0,0,0,0,0,SXF_CLIENTSIDE,0)
		GFLR A 1 bright A_SpawnItemEx("AnnihilatorMissileTrail",-15,0,0,0,0,0,0,SXF_CLIENTSIDE,0)
		Loop
	Death:
		TNT1 A 0 A_SetScale(0.5)
		TNT1 A 0 A_Explode
		ENR1 ABCDEF 2 Bright
		Stop
	}
}
// Trail

/*
PILLOW'S SHAMELESSLY BASED ON KEKSDOSE'S PARTICLE EFFECT BUILDING METHOD!

Use as you wish, as long as you credit the fellas below.

Coded by PillowBlaster, graphics by KeksDose and DukeNukem.
*/

ACTOR AnnihilatorMissileTrail : TwerpmeisterAvenue
{
	States
	{
	Spawn:
		TNT1 AA 0 A_SpawnItemEx("AnnihilatorMissile_Smoke2",0,random(3,-3),random(3,-3),frandom(-0.25,-0.125),frandom(0.1,0.05),frandom(0.1,0.05),random(135,225),SXF_CLIENTSIDE,20)
		TNT1 A 0 A_SpawnItemEx("AnnihilatorMissile_Flame2",0,random(3,-3),random(3,-3),frandom(-0.25,-0.125),frandom(0.1,0.05),frandom(0.1,0.05),random(135,225),SXF_CLIENTSIDE,20)	
		TNT1 A 1 A_SpawnItemEx("AnnihilatorMissile_FlightFlare",0,random(3,-3),random(3,-3),frandom(-0.25,-0.125),frandom(0.1,0.05),frandom(0.1,0.05),random(135,225),SXF_CLIENTSIDE,20)
		Stop
	}
}

Actor AnnihilatorMissile_Flare : RagingBattleHamster
{
	Scale 0.100
	Alpha 0.9
	States
	{
	Spawn:
		TNT1 A 0 A_Jump(256,"SprA","SprB")
	SprA:
		ANP1 A 0 A_Jump(256,"Main")
	SprB:
		ANP1 B 0 A_Jump(256,"Main")
	Main:
		"####" "#" 0 A_FadeOut(frandom(0.05,0.025))
		"####" "#" 1 Bright A_SetScale(ScaleX + frandom(0.02,0.03))
		Loop
	}
}

Actor AnnihilatorMissile_Smoke : RagingBattleHamster
{
	Scale 0.0
	Alpha 0.0
	Renderstyle Translucent
	States
	{
	Spawn:
		TNT1 AA 0 A_Jump(256,"SprA","SprB","SprC","SprD")
	SprA:
		ANP2 A 0 A_Jump(256,"Scaling")
	SprB:
		ANP2 B 0 A_Jump(256,"Scaling")
	SprC:
		ANP2 C 0 A_Jump(256,"Scaling")
	SprD:
		ANP2 D 0 A_Jump(256,"Scaling")
	Scaling: //Why so derplicated? Because smoke is one hell of an ass to make look good, when mixed with rest of stuff.
		"####" "#" 0 A_SetScale(frandom(0.05,0.075))
	FadingIn:
		"####" "#" 0 A_ChangeVelocity(random(-0.02,0.02),random(-0.02,0.02),random(0.0,0.05),CVF_RELATIVE)
		"####" "#" 0 A_FadeIn(frandom(0.02,0.04))
		"####" "#" 0 A_SetScale(ScaleX + frandom(0.02,0.025))
		"####" "#" 1 A_JumpIf(Alpha>=0.5,"Main")
		Loop
	Main:
		"####" "#" 0 A_ChangeVelocity(random(-0.02,0.02),random(-0.02,0.02),random(0.0,0.05),CVF_RELATIVE)
		"####" "#" 0 A_FadeOut(frandom(0.05,0.08))
		"####" "#" 1 A_SetScale(ScaleX + frandom(0.02,0.025))
		Loop
	}
}

Actor AnnihilatorMissile_Flame : RagingBattleHamster
{
	Scale 0.085
	States
	{
	Spawn:
		TNT1 AA 0
		TNT1 A 0 A_FadeOut(frandom(0.1,0.0))
		TNT1 A 0 A_Jump(256,"SprA","SprB","SprC","SprD","SprE","SprF","SprG","SprH","SprI","SprJ","SprK","SprL")
	SprA:
		ANP3 A 0 A_Jump(256,"Main")
	SprB:
		ANP3 B 0 A_Jump(256,"Main")
	SprC:
		ANP3 C 0 A_Jump(256,"Main")
	SprD:
		ANP3 D 0 A_Jump(256,"Main")
	SprE:
		ANP3 E 0 A_Jump(256,"Main")
	SprF:
		ANP3 F 0 A_Jump(256,"Main")
	SprG:
		ANP3 G 0 A_Jump(256,"Main")
	SprH:
		ANP3 H 0 A_Jump(256,"Main")
	SprI:
		ANP3 I 0 A_Jump(256,"Main")
	SprJ:
		ANP3 J 0 A_Jump(256,"Main")
	SprK:
		ANP3 K 0 A_Jump(256,"Main")
	SprL:
		ANP3 L 0 A_Jump(256,"Main")
	Main:
		"####" "#" 0 A_SetScale(ScaleX + frandom(0.02,0.03))
		"####" "#" random(1,2) Bright A_FadeOut(frandom(0.05,0.075))
		Loop
	}
}

Actor AnnihilatorMissile_FlightFlare : AnnihilatorMissile_Flare
{
	Scale 0.0675
	Alpha 0.99
	States
	{
	Main:
		"####" "#" 1 Bright A_SetScale(ScaleX-random(0.002,0.004))
		"####" "#" 0 A_FadeOut(frandom(0.2,0.4))
		"####" "#" 0 A_JumpIf(ScaleX <= 0, "NULL")
		Loop
	}
}

Actor AnnihilatorMissile_Flame2 : AnnihilatorMissile_Flame
{
	Scale 0.08
	States
	{
	Main:
		"####" "#" 0 A_SetScale(ScaleX + frandom(0.006,0.004))
		"####" "#" 1 Bright A_FadeOut(frandom(0.09,0.08))
		Loop
	}
}

Actor AnnihilatorMissile_Smoke2 : AnnihilatorMissile_Smoke
{
	States
	{
	Scaling:
		"####" "#" 0 A_SetScale(frandom(0.0075,0.008))
	FadingIn:
		"####" "#" 0 A_ChangeVelocity(random(-0.02,0.02),random(-0.02,0.02),random(0.0,0.05),CVF_RELATIVE)
		"####" "#" 0 A_FadeIn(frandom(0.06,0.04))
		"####" "#" 0 A_SetScale(ScaleX + frandom(0.002,0.0025))
		"####" "#" 1 A_JumpIf(Alpha>=0.4,"Main")
		Loop
	Main:
		"####" "#" 0 A_ChangeVelocity(random(-0.02,0.02),random(-0.02,0.02),random(0.0,0.05),CVF_RELATIVE)
		"####" "#" 0 A_FadeOut(frandom(0.03,0.04))
		"####" "#" 1 A_SetScale(ScaleX + frandom(0.005,0.003))
		Loop
	}
}