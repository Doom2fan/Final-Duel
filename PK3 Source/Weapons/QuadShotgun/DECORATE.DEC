Actor QuadShotgunFired : Boolean { }
Actor AmmoQuadShotgun : AMMO
{
	Inventory.MaxAmount 4
	Ammo.BackpackMaxAmount 4
	+IGNORESKILL
}
Actor QuadShotgun : FDWeapon 30089
{
	//$Category Final Duel-Weapons
	//$Sprite QSGGZ0
	Tag "$TAGQSG"
	Inventory.PickupMessage "$GOTQUADSHOTGUN"
	Obituary "$OBQUADSHOTGUN"
	Inventory.PickupSound "misc/gunpickup"
	Weapon.AmmoUse 2
	Weapon.AmmoUse2 4
	Weapon.AmmoGive 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType "AmmoQuadShotgun"
	Weapon.AmmoType2 "AmmoQuadShotgun"
	+WEAPON.NOALERT
	+WEAPON.NOAUTOFIRE
	+AMMO_OPTIONAL
	+ALT_AMMO_OPTIONAL
	States
	{
	Spawn:
		QSGG Z -1
		Stop
	Ready:
		QSGS CBA 1
	Ready2:
		TNT1 A 0 A_JumpIfInventory ("Kicking", 1, "Kicking")
		TNT1 A 0 A_JumpIfInventory ("Reloading", 1, "Reload")
		TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		QSGG A 1 A_WeaponReady
		Loop
	Select:
		QSGG A 0 A_Raise
		Wait
	Deselect:
		QSGS ABC 1
		QSGG A 0 A_Lower
		Wait
	Reload:
		TNT1 A 0 A_TakeInventory ("Reloading", 1)
		TNT1 A 0 A_JumpIfInventory ("AmmoQuadShotgun", 4, "Ready2")
        TNT1 A 0 A_JumpIfInventory ("Shell2", 1, 1)
        Goto Ready2
		TNT1 A 0 A_PlaySound("QuadShotgun/Open", CHAN_WEAPON)
		QSGR ABCD 3
		TNT1 A 0 A_JumpIfInventory ("AmmoQuadShotgun", 2, 1)
		TNT1 AA 0 A_FireCustomMissile("ShellCasingSpawn2", 0, 0, -4, -4)
		TNT1 AA 0 A_FireCustomMissile("ShellCasingSpawn2", 0, 0, -4, -4)
		QSGR A 0 A_TakeInventory ("QuadShotgunFired", 1)
		Goto InsertShells
	InsertShells:
		TNT1 A 0 A_JumpIfInventory ("AmmoQuadShotgun", 2, "InsertShells2")
        TNT1 A 0 A_JumpIfInventory ("Shell2", 2, 1)
        Goto Ready2
		QSGR E 2
		QSGR FGH 2
		QSGR I 2 A_PlaySound("QuadShotgun/Load", CHAN_WEAPON)
		TNT1 A 0 A_TakeInventory("Shell2", 2)
		TNT1 A 0 A_GiveInventory("AmmoQuadShotgun", 2)
        TNT1 A 0 A_JumpIfInventory ("Shell2", 2, 1)
        Goto FinishReload
		QSGR JJKKLLM 1
		Goto InsertShells
	InsertShells2:
		TNT1 A 0 A_JumpIfInventory ("AmmoQuadShotgun", 4, "FinishReload")
        TNT1 A 0 A_JumpIfInventory ("Shell2", 2, 1)
        Goto Ready2
		QSGR NOP 2
		QSGR Q 2 A_PlaySound("QuadShotgun/Load", CHAN_WEAPON)
		TNT1 A 0 A_TakeInventory("Shell2", 2)
		TNT1 A 0 A_GiveInventory("AmmoQuadShotgun", 2)
		QSGR R 1
		Goto InsertShells2
	FinishReload:
		TNT1 A 0 A_PlaySound("QuadShotgun/Close", CHAN_WEAPON)
		QSGR STUV 3
		QSGG A 2
		Goto Ready2
	DryFire:
		QSGG A 0 A_PlaySound ("weapons/empty")
		TNT1 A 0 A_JumpIfInventory ("AmmoQuadShotgun", 1, 1)
		TNT1 A 0 A_JumpIfInventory ("EnableAutoReload", 1, "Reload")
		Goto Ready2
	Fire:
		TNT1 A 0 A_JumpIfNoAmmo ("DryFire")
		TNT1 A 0 A_JumpIfInventory ("QuadShotgunFired", 1, "Fire2")
		TNT1 A 0 A_FireCustomMissile("QuadShotgunTracer", frandom(-2.5,2.5), 1, 0, -2, 0, frandom(-3.0,3.0))
		TNT1 AAAAAAAA 0 A_FireCustomMissile("QuadShotgunTracer", frandom(-2.5,2.5), 0, 0, -2, 0, frandom(-3.0,3.0))
		TNT1 A 0 A_Recoil(cos(pitch) * 5)
		TNT1 A 0 A_PlaySound("QuadShotgun/Fire", CHAN_WEAPON)
		TNT1 A 0 A_AlertMonsters
		QSGF AAAA 1 Bright A_SetPitch (pitch - 0.75)
		QSGG A 15 A_GiveInventory ("QuadShotgunFired", 1)
		Goto Ready2
	Fire2:
		TNT1 A 0 A_JumpIfNoAmmo ("DryFire")
		TNT1 A 0 A_FireCustomMissile("QuadShotgunTracer", frandom(-2.5,2.5), 1, 0, -2, 0, frandom(-3.0,3.0))
		TNT1 AAAAAAAA 0 A_FireCustomMissile("QuadShotgunTracer", frandom(-2.5,2.5), 0, 0, -2, 0, frandom(-3.0,3.0))
		TNT1 A 0 A_Recoil(cos(pitch) * 5)
		TNT1 A 0 A_PlaySound("QuadShotgun/Fire", CHAN_WEAPON)
		TNT1 A 0 A_AlertMonsters
		QSGF BBBB 1 Bright A_SetPitch (pitch - 0.75)
		QSGG A 15 A_TakeInventory ("QuadShotgunFired", 1)
		Goto Ready2
	AltFire:
		TNT1 A 0 A_JumpIfNoAmmo ("DryFire")
		TNT1 A 0 A_FireCustomMissile("QuadShotgunTracer", frandom(-5.0,5.0), 1, 0, -2, 0, frandom(-6.0,6.0))
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_FireCustomMissile("QuadShotgunTracer", frandom(-5.0,5.0), 0, 0, -2, 0, frandom(-6.0,6.0))
		TNT1 A 0 A_Recoil(cos(pitch) * 10)
		TNT1 A 0 A_PlaySound("QuadShotgun/AltFire", CHAN_WEAPON)
		TNT1 A 0 A_AlertMonsters
		QSGF CCCC 1 Bright A_SetPitch (pitch - 1.5)
		QSGG A 15
		Goto Ready2
	}
}