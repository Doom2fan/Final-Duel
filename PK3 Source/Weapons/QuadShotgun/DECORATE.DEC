Actor SpawnedQuadShotgun : BaseSpawnedWeapon 30089 {
	Inventory.PickupMessage "$GOTQUADSHOTGUN"
	States {
	Spawn:
		REVP A -1
		Stop
	Pickup:
		TNT1 A 0 A_JumpIfInventory ("QuadShotgun", 0, "GrabAmmo")
		TNT1 A 0 A_TakeInventory ("AmmoQuadShotgun", 999999999)
		TNT1 A 0 A_GiveInventory ("QuadShotgun", 1)
		TNT1 A 0 A_GiveInventory ("AmmoQuadShotgun", 2)
		Stop
	GrabAmmo:
		TNT1 A 0 A_JumpIfInventory ("Shell2", 0, "Failed")
		TNT1 A 0 A_GiveInventory ("Shell2", 2)
		Stop
	}
}
Actor DroppedQuadShotgun : DroppedWeaponBase
{
	States
	{
	Spawn:
		QSGG Z 1
		Loop
	Death:
		TNT1 A 0 A_SpawnItemEx("QuadShotgun")
		Stop
	}
}
Actor AmmoQuadShotgun : AMMO
{
	Inventory.MaxAmount 4
	Ammo.BackpackMaxAmount 4
	+IgnoreSkill
}
Actor QuadShotgunTwoShellsOnly : Boolean { }
Actor QuadShotgun : FDWeapon
{
	//$Category Final Duel-Weapons
	//$Title Quad Shotgun
	//$Sprite QSGGZ0
	Tag "$TAGQSG"
	Inventory.PickupMessage "$GOTQUADSHOTGUN"
	Obituary "$OBQUADSHOTGUN"
	Inventory.PickupSound "misc/gunpickup"
	Weapon.AmmoUse 2
	Weapon.AmmoUse2 4
	Weapon.AmmoGive 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType "AmmoQuadShotgun"
	Weapon.AmmoType2 "AmmoQuadShotgun"
	+Weapon.NoAlert +Alt_Ammo_Optional
	States
	{
	Spawn:
		QSGG Z -1
		Stop
	Ready:
		TNT1 A 0 ACS_NamedExecute ("PlayerSpeed", 0, 90)
		QSGS CBA 1
	Ready2:
		TNT1 A 0 A_JumpIfInventory ("DropDatWeapon", 1, "DropWeapon")
		TNT1 A 0 A_JumpIfInventory ("Kicking", 1, "Kicking")
		TNT1 A 0 A_JumpIfInventory ("Reloading", 1, "Reload")
		TNT1 A 0 A_JumpIfInventory ("Taunting",1,"Taunt")
		QSGG A 1 A_WeaponReady
		Loop
	DropWeapon:
		TNT1 A 0 A_TakeInventory ("DropDatWeapon", 1)
		TNT1 A 0 A_FireCustomMissile("DroppedQuadShotgun", 0, 0, 0)
		TNT1 A 0 A_TakeInventory("QuadShotgun", 1)
		Stop
	Select:
		QSGG A 0 A_Raise
		Wait
	Deselect:
		TNT1 A 0 ACS_NamedExecute ("PlayerSpeed", 0, 100)
		QSGS ABC 1
		QSGG A 0 A_Lower
		Wait
	Reload:
		TNT1 A 0 A_TakeInventory ("Reloading", 1)
		TNT1 A 0 A_JumpIfInventory ("AmmoQuadShotgun", 4, "Ready2")
        TNT1 A 0 A_JumpIfInventory ("Shell2", 2, 1)
        Goto Ready2
		TNT1 A 0 A_JumpIfInventory ("Shell2", 3, "BeginReload")
		TNT1 A 0 A_GiveInventory ("QuadShotgunTwoShellsOnly", 1)
	BeginReload:
		TNT1 A 0 A_PlaySound("QuadShotgun/Open", CHAN_WEAPON)
		QSGR ABCD 3
		Goto GotoInsertShells
	GotoInsertShells:
		TNT1 A 0 A_JumpIfInventory ("QuadShotgunTwoShellsOnly", 1, "GotoInsertShells2")
		TNT1 A 0 A_JumpIfInventory ("AmmoQuadShotgun", 2, "GotoInsertShells2")
		TNT1 AAAA 0 A_FireCustomMissile("ShellCasingSpawn2", 0, 0, -4, -4)
	InsertShells:
		TNT1 A 0 A_JumpIfInventory ("AmmoQuadShotgun", 2, "InsertShells2")
        TNT1 A 0 A_JumpIfInventory ("Shell2", 2, 1)
        Goto FinishReload
		QSGR E 2
		QSGR FGH 2
		QSGR I 2 A_PlaySound("QuadShotgun/Load", CHAN_WEAPON)
		TNT1 A 0 A_TakeInventory("Shell2", 2)
		TNT1 A 0 A_GiveInventory("AmmoQuadShotgun", 2)
        TNT1 A 0 A_JumpIfInventory ("Shell2", 2, 1)
        Goto FinishReload
		QSGR JJKKLLM 1
		Goto InsertShells
	GotoInsertShells2:
		TNT1 A 0 A_TakeInventory ("QuadShotgunTwoShellsOnly", 1)
		TNT1 AA 0 A_FireCustomMissile("ShellCasingSpawn2", 0, 0, -4, -4)
	InsertShells2:
		TNT1 A 0 A_JumpIfInventory ("AmmoQuadShotgun", 4, "FinishReload")
        TNT1 A 0 A_JumpIfInventory ("Shell2", 2, 1)
        Goto FinishReload
		QSGR NOP 2
		QSGR Q 2 A_PlaySound("QuadShotgun/Load", CHAN_WEAPON)
		TNT1 A 0 A_TakeInventory("Shell2", 2)
		TNT1 A 0 A_GiveInventory("AmmoQuadShotgun", 2)
		QSGR R 1
		Goto InsertShells2
	FinishReload:
		TNT1 A 0 A_PlaySound("QuadShotgun/Close", CHAN_WEAPON)
		QSGR STUV 3
		QSGG A 2
		Goto Ready2
	DryFire:
		QSGG A 0 A_PlaySound ("Weapons/empty", 7)
		TNT1 A 0 A_JumpIfInventory ("AmmoQuadShotgun", 1, 1)
		TNT1 A 0 A_JumpIfInventory ("EnableAutoReload", 1, "Reload")
		Goto Ready2
	Fire:
		TNT1 A 0 A_JumpIfNoAmmo ("DryFire")
		TNT1 A 0 A_JumpIfInventory ("AmmoQuadShotgun", 3, 1)
		Goto Fire2
		TNT1 A 0 A_FireCustomMissile("QuadShotgunTracer", frandom(-5.0,5.0), 1, 0, -2, 0, frandom(-7.0,7.0))
		TNT1 AAAAAAAA 0 A_FireCustomMissile("QuadShotgunTracer", frandom(-5.0,5.0), 0, 0, -2, 0, frandom(-7.0,7.0))
		TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -5.0, 0, Sin(Pitch) * 5.0, 1)
		TNT1 A 0 A_PlaySound("QuadShotgun/Fire", 5)
		TNT1 A 0 A_AlertMonsters
		QSGF AAA 1 Bright A_SetPitch (pitch - 0.75, SPF_INTERPOLATE)
		QSGF C 1 A_SetPitch (pitch - 0.75, SPF_INTERPOLATE)
		QSGG A 7
		Goto Ready2
	Fire2:
		TNT1 A 0 A_JumpIfNoAmmo ("DryFire")
		TNT1 A 0 A_FireCustomMissile("QuadShotgunTracer", frandom(-5.0,5.0), 1, 0, -2, 0, frandom(-7.0,7.0))
		TNT1 AAAAAAAA 0 A_FireCustomMissile("QuadShotgunTracer", frandom(-5.0,5.0), 0, 0, -2, 0, frandom(-7.0,7.0))
		TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -5.0, 0, Sin(Pitch) * 5.0, 1)
		TNT1 A 0 A_PlaySound("QuadShotgun/Fire", 6)
		TNT1 A 0 A_AlertMonsters
		QSGF BBB 1 Bright A_SetPitch (pitch - 0.75, SPF_INTERPOLATE)
		QSGF C 1 A_SetPitch (pitch - 0.75, SPF_INTERPOLATE)
		QSGG A 7
		Goto Ready2
	AltFire:
		TNT1 A 0 A_JumpIfNoAmmo ("DryFire")
		TNT1 A 0 A_FireCustomMissile("QuadShotgunTracer", frandom(-9.5,9.5), 1, 0, -2, 0, frandom(-12.5,12.5))
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_FireCustomMissile("QuadShotgunTracer", frandom(-9.5,9.5), 0, 0, -2, 0, frandom(-12.5,12.5))
		TNT1 A 0 A_ChangeVelocity (Cos(Pitch) * -10.0, 0, Sin(Pitch) * 10.0, 1)
		TNT1 A 0 A_PlaySound("QuadShotgun/AltFire", 5)
		TNT1 A 0 A_AlertMonsters
		QSGF DDD 1 Bright A_SetPitch (pitch - 1.5, SPF_INTERPOLATE)
		TNT1 A 0 A_SetPitch (pitch - 1.5, SPF_INTERPOLATE)
		QSGF EFG 1
		QSGG A 5
		Goto Ready2
	}
}