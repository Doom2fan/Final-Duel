// Rune fade by Pillowblaster
Actor RuneFadeBase {
	+NoInteraction +NoGravity +NoTimeFreeze
	Renderstyle Add
}

Actor RuneBase : CustomInventory {
	Inventory.Amount 1
	Inventory.MaxAmount 1
	Inventory.InterHubAmount 1
	Inventory.PickupSound "misc/RunePickup"
	Inventory.UseSound "misc/UseRune"
	+Inventory.FancyPickupSound +InvBar +CountItem +FloatBob
	+NoTimeFreeze +NoGravity
	States {
	AlreadyInUse:
		TNT1 A 0
		Fail
	}
}

// Regeneration
// Sprites by SoloSpaghetti and Alex_Mercer
Actor RegenerationRuneFade : RuneFadeBase {
	States {
	Spawn:
		PRNE A 0 A_SetScale (ScaleX+0.05, ScaleX)
		PRNE A 1 Bright A_FadeOut (0.25)
		Loop
	}
}

Actor RegenerationRunePower : Powerup {
	Powerup.Duration -60
	Powerup.Color Purple 0.10
}

Actor RegenerationRune : RuneBase {
	//$Category Final Duel-Runes
	//$Title Regeneration Rune
	Tag "$TAGRREGEN"
	Inventory.PickupMessage "Regeneration Rune"
	Inventory.Icon RUNEREGN
	States {
	Spawn:
		PRNE A 1 Bright A_SpawnItemEx ("RegenerationRuneFade", 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, SXF_CLIENTSIDE)
		Loop
	Use:
		TNT1 A 0 A_JumpIfInventory ("RegenerationRunePower", 1, "AlreadyInUse")
		TNT1 A 0 A_GiveInventory ("RegenerationRunePower")
		TNT1 A 0 ACS_NamedExecute ("FDRegenerationRune", 0)
		Stop
	}
}

// Double Damage
// Sprites by Alex_Mercer
Actor DoubleDamageRuneFade : RuneFadeBase {
	States {
	Spawn:
		PRNE B 0 A_SetScale (ScaleX+0.05, ScaleX)
		PRNE B 1 Bright A_FadeOut (0.25)
		Loop
	}
}

Actor PowerDoubleDamageRune : PowerDamage {
	Powerup.Duration -30
	Powerup.Color Red 0.15
	DamageFactor 2.0
}

Actor DoubleDamageRune : RuneBase {
	//$Category Final Duel-Runes
	//$Title Double Damage Rune
	Tag "$TAGRDOUBLEDAMAGE"
	Inventory.PickupMessage "Double Damage Rune"
	Inventory.Icon RUNEDDMG
	States {
	Spawn:
		PRNE B 1 Bright A_SpawnItemEx ("DoubleDamageRuneFade", 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, SXF_CLIENTSIDE)
		Loop
	Use:
		PRNE B 0 A_JumpIfInventory ("PowerDoubleDamageRune", 1, "AlreadyInUse")
		PRNE B 0 A_GiveInventory ("PowerDoubleDamageRune", 1)
		Stop
	}
}

// Agility
// Sprites by Alex_Mercer
Actor AgilityRuneFade : RuneFadeBase {
	States {
	Spawn:
		PRNE C 0 A_SetScale (ScaleX+0.05, ScaleX)
		PRNE C 1 Bright A_FadeOut (0.25)
		Loop
	}
}

Actor PowerAgilityRune : PowerHighJump {
	Powerup.Duration -50
	Powerup.Color Yellow 0.15
}

Actor AgilityRune : RuneBase {
	//$Category Final Duel-Runes
	//$Title Agility Rune
	Tag "$TAGRAGILITY"
	Inventory.PickupMessage "Agility Rune"
	Inventory.Icon RUNEAGLT
	States {
	Spawn:
		PRNE C 1 Bright A_SpawnItemEx ("AgilityRuneFade", 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, SXF_CLIENTSIDE)
		Loop
	Use:
		PRNE C 0 A_JumpIfInventory ("PowerAgilityRune", 1, "AlreadyInUse")
		PRNE C 0 A_GiveInventory ("PowerAgilityRune", 1)
		Stop
	}
}

// Drain
// Sprites by Alex_Mercer
Actor DrainRuneFade : RuneFadeBase {
	States {
	Spawn:
		PRNE D 0 A_SetScale (ScaleX+0.05, ScaleX)
		PRNE D 1 Bright A_FadeOut (0.25)
		Loop
	}
}

Actor PowerDrainRune : PowerDrain {
	Powerup.Duration -30
	Powerup.Color RedMap
}

Actor DrainRune : RuneBase {
	//$Category Final Duel-Runes
	//$Title Drain Rune
	Tag "$TAGRDRAIN"
	Inventory.PickupMessage "Drain Rune"
	Inventory.Icon RUNEDRAI
	States {
	Spawn:
		PRNE D 1 Bright A_SpawnItemEx ("DrainRuneFade", 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, SXF_CLIENTSIDE)
		Loop
	Use:
		PRNE D 0 A_JumpIfInventory ("PowerDrainRune", 1, "AlreadyInUse")
		PRNE D 0 A_GiveInventory ("PowerDrainRune", 1)
		Stop
	}
}